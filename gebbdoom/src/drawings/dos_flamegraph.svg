<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   version="1.1"
   width="680"
   height="116.72461"
   onload="init(evt)"
   viewBox="0 0 680 116.72461"
   id="svg133"
   sodipodi:docname="dos_flamegraph.svg"
   inkscape:version="0.91 r13725">
  <metadata
     id="metadata137">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <sodipodi:namedview
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1243"
     inkscape:window-height="754"
     id="namedview135"
     showgrid="false"
     fit-margin-top="0"
     fit-margin-left="0"
     fit-margin-right="0"
     fit-margin-bottom="0"
     inkscape:zoom="3.6029526"
     inkscape:cx="60.314184"
     inkscape:cy="10.125537"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="0"
     inkscape:current-layer="svg133" />
  <!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
  <!-- NOTES:  -->
  <defs
     id="defs7">
    <linearGradient
       id="background"
       y1="0"
       y2="1"
       x1="0"
       x2="0">
      <stop
         stop-color="#eeeeee"
         offset="5%"
         id="stop2" />
      <stop
         stop-color="#eeeeb0"
         offset="95%"
         id="stop4" />
    </linearGradient>
  </defs>
  <style
     type="text/css"
     id="style9">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
  <script
     type="text/ecmascript"
     id="script11"><![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]></script>
  <text
     text-anchor=""
     x="0"
     y="133.72461"
     font-size="12"
     id="details"
     style="font-size:12px;font-family:Verdana;fill:#000000" />
  <text
     text-anchor=""
     x="0"
     y="8.7246094"
     font-size="12"
     id="unzoom"
     onclick="unzoom()"
     style="font-size:12px;font-family:Verdana;opacity:0;fill:#000000">Reset Zoom</text>
  <text
     text-anchor=""
     x="580"
     y="133.72461"
     font-size="12"
     id="matched"
     style="font-size:12px;font-family:Verdana;fill:#000000" />
  <g
     class="func_g"
     onmouseover="s(this)"
     onmouseout="c()"
     onclick="zoom(this)"
     id="g27"
     transform="translate(-10,-15.275391)">
    <title
       id="title21">R_DrawMasked (898 samples, 8.61%)</title>
    <rect
       x="73.400002"
       y="37"
       width="58.5"
       height="15"
       rx="2"
       ry="2"
       id="rect23"
       style="fill:#e17536" />
    <text
       text-anchor=""
       x="76.360001"
       y="47.5"
       font-size="12"
       id="text25"
       style="font-size:12px;font-family:Verdana;fill:#000000">R_Draw..</text>
  </g>
  <g
     class="func_g"
     onmouseover="s(this)"
     onmouseout="c()"
     onclick="zoom(this)"
     id="g35"
     transform="translate(-10,-15.275391)">
    <title
       id="title29">D_ProcessEvents (4 samples, 0.04%)</title>
    <rect
       x="582.09998"
       y="69"
       width="0.30000001"
       height="15"
       rx="2"
       ry="2"
       id="rect31"
       style="fill:#ee222b" />
    <text
       text-anchor=""
       x="585.10999"
       y="79.5"
       font-size="12"
       id="text33"
       style="font-size:12px;font-family:Verdana;fill:#000000" />
  </g>
  <g
     class="func_g"
     onmouseover="s(this)"
     onmouseout="c()"
     onclick="zoom(this)"
     id="g43"
     transform="translate(-10,-15.275391)">
    <title
       id="title37">R_DrawPlanes (2,355 samples, 22.58%)</title>
    <rect
       x="131.89999"
       y="37"
       width="153.5"
       height="15"
       rx="2"
       ry="2"
       id="rect39"
       style="fill:#d0400a" />
    <text
       text-anchor=""
       x="134.91"
       y="47.5"
       font-size="12"
       id="text41"
       style="font-size:12px;font-family:Verdana;fill:#000000">R_DrawPlanes</text>
  </g>
  <g
     class="func_g"
     onmouseover="s(this)"
     onmouseout="c()"
     onclick="zoom(this)"
     id="g51"
     transform="translate(-10,-15.275391)">
    <title
       id="title45">M_Ticker (56 samples, 0.54%)</title>
    <rect
       x="684.20001"
       y="69"
       width="3.5999999"
       height="15"
       rx="2"
       ry="2"
       id="rect47"
       style="fill:#d8e22a" />
    <text
       text-anchor=""
       x="687.20001"
       y="79.5"
       font-size="12"
       id="text49"
       style="font-size:12px;font-family:Verdana;fill:#000000" />
  </g>
  <g
     class="func_g"
     onmouseover="s(this)"
     onmouseout="c()"
     onclick="zoom(this)"
     id="g59"
     transform="translate(-10,-15.275391)">
    <title
       id="title53">I_UpdateNoBlit (81 samples, 0.78%)</title>
    <rect
       x="68.099998"
       y="53"
       width="5.3000002"
       height="15"
       rx="2"
       ry="2"
       id="rect55"
       style="fill:#e53229" />
    <text
       text-anchor=""
       x="71.080002"
       y="63.5"
       font-size="12"
       id="text57"
       style="font-size:12px;font-family:Verdana;fill:#000000" />
  </g>
  <rect
     style="fill:#fca831"
     id="rect63"
     ry="2"
     rx="2"
     height="15"
     width="674.09998"
     y="69.724609"
     x="5.8999996" />
  <text
     style="font-size:12px;font-family:Verdana;fill:#000000"
     id="text65"
     font-size="12"
     y="80.224609"
     x="8.9300003"
     text-anchor="">D_DoomLoop</text>
  <g
     class="func_g"
     onmouseover="s(this)"
     onmouseout="c()"
     onclick="zoom(this)"
     id="g75"
     transform="translate(-10,-15.275391)">
    <title
       id="title69">all (10,431 samples, 100%)</title>
    <rect
       x="10"
       y="117"
       width="680"
       height="15"
       rx="2"
       ry="2"
       id="rect71"
       style="fill:#d06315" />
    <text
       text-anchor=""
       x="13"
       y="127.5"
       font-size="12"
       id="text73"
       style="font-size:12px;font-family:Verdana;fill:#000000" />
  </g>
  <g
     class="func_g"
     onmouseover="s(this)"
     onmouseout="c()"
     onclick="zoom(this)"
     id="g83"
     transform="translate(-10,-15.275391)">
    <title
       id="title77">D_Display (7,885 samples, 75.59%)</title>
    <rect
       x="68.099998"
       y="69"
       width="514"
       height="15"
       rx="2"
       ry="2"
       id="rect79"
       style="fill:#de7431" />
    <text
       text-anchor=""
       x="71.080002"
       y="79.5"
       font-size="12"
       id="text81"
       style="font-size:12px;font-family:Verdana;fill:#000000">D_Display</text>
  </g>
  <g
     class="func_g"
     onmouseover="s(this)"
     onmouseout="c()"
     onclick="zoom(this)"
     id="g91"
     transform="translate(-10,-15.275391)">
    <title
       id="title85">G_BuildTiccmd (6 samples, 0.06%)</title>
    <rect
       x="582.40002"
       y="69"
       width="0.40000001"
       height="15"
       rx="2"
       ry="2"
       id="rect87"
       style="fill:#e77515" />
    <text
       text-anchor=""
       x="585.37"
       y="79.5"
       font-size="12"
       id="text89"
       style="font-size:12px;font-family:Verdana;fill:#000000" />
  </g>
  <g
     class="func_g"
     onmouseover="s(this)"
     onmouseout="c()"
     onclick="zoom(this)"
     id="g99"
     transform="translate(-10,-15.275391)">
    <title
       id="title93">S_UpdateSounds (33 samples, 0.32%)</title>
    <rect
       x="687.79999"
       y="69"
       width="2.2"
       height="15"
       rx="2"
       ry="2"
       id="rect95"
       style="fill:#d94d32" />
    <text
       text-anchor=""
       x="690.84998"
       y="79.5"
       font-size="12"
       id="text97"
       style="font-size:12px;font-family:Verdana;fill:#000000" />
  </g>
  <rect
     style="fill:#ee8723"
     id="rect103"
     ry="2"
     rx="2"
     height="15"
     width="680"
     y="85.724609"
     x="0" />
  <text
     style="font-size:12px;font-family:Verdana;fill:#000000"
     id="text105"
     font-size="12"
     y="114.22461"
     x="3"
     text-anchor="">main</text>
  <g
     class="func_g"
     onmouseover="s(this)"
     onmouseout="c()"
     onclick="zoom(this)"
     id="g115"
     transform="translate(-10,-15.275391)">
    <title
       id="title109">R_RenderPlayerView (7,804 samples, 74.82%)</title>
    <rect
       x="73.400002"
       y="53"
       width="508.70001"
       height="15"
       rx="2"
       ry="2"
       id="rect111"
       style="fill:#f0011e" />
    <text
       text-anchor=""
       x="76.360001"
       y="63.5"
       font-size="12"
       id="text113"
       style="font-size:12px;font-family:Verdana;fill:#000000">R_RenderPlayerView</text>
  </g>
  <g
     class="func_g"
     onmouseover="s(this)"
     onmouseout="c()"
     onclick="zoom(this)"
     id="g123"
     transform="translate(-10,-15.275391)">
    <title
       id="title117">R_RenderBSPNode (4,551 samples, 43.63%)</title>
    <rect
       x="285.39999"
       y="37"
       width="296.70001"
       height="15"
       rx="2"
       ry="2"
       id="rect119"
       style="fill:#e81632" />
    <text
       text-anchor=""
       x="288.42999"
       y="47.5"
       font-size="12"
       id="text121"
       style="font-size:12px;font-family:Verdana;fill:#000000">R_RenderBSPNode</text>
  </g>
  <g
     class="func_g"
     onmouseover="s(this)"
     onmouseout="c()"
     onclick="zoom(this)"
     id="g131"
     transform="translate(-10,-15.275391)">
    <title
       id="title125">G_Ticker (1,556 samples, 14.92%)</title>
    <rect
       x="582.79999"
       y="69"
       width="101.4"
       height="15"
       rx="2"
       ry="2"
       id="rect127"
       style="fill:#d2df36" />
    <text
       text-anchor=""
       x="585.76001"
       y="79.5"
       font-size="12"
       id="text129"
       style="font-size:12px;font-family:Verdana;fill:#000000">G_Ticker</text>
  </g>
  <text
     style="font-size:12px;font-family:Verdana;fill:#000000"
     id="text65-7"
     font-size="12"
     y="97.120773"
     x="1.9145968"
     text-anchor="">D_DoomMain</text>
</svg>
